package utility.collection;

public class ArrayQueue<T> implements QueueADT<T>{
   
   private static int DEFAULT_CAPACITY = 100;
   private int front, count;
   private T[] queue;
   
   public ArrayQueue(){
      this.front = 0;
      this.count = 0;
      this.queue = (T[]) new Object[DEFAULT_CAPACITY];
   }
   
   public ArrayQueue(int capacity){
      this.front = 0;
      this.count = 0;
      this.queue = (T[]) new Object[capacity];
   }

   @Override
   public void enqueue(T element){
      
   }

   @Override
   public T dequeue(){
      return null;
   }

   @Override
   public T frist()
   {
      // TODO Auto-generated method stub
      return null;
   }

   @Override
   public int indexOf(T element)
   {
      // TODO Auto-generated method stub
      return 0;
   }

   @Override
   public boolean isEmpty()
   {
      // TODO Auto-generated method stub
      return false;
   }

   @Override
   public int size(){
      return count;
   }

}
