package utility.math;

public class NaturalNumber{

   private int value;
   
   public NaturalNumber(int value){
      this.value = value;
   }
   
   public void setValue(int value){
      this.value = value;
   }
   
   public int getValue(){
      return this.value;
   }
   
   public String toString(){
      return "The value is: "+this.value;
   }
   
   public boolean isPrime(){
      boolean prime = true;
      if(value > 0){
         for (int i = 2; i < this.value; i++){
            if((value % i) == 0){
               prime = false;
            }
         }
      }
      else{
         return false;
      }
      return prime;
   }
   
   public boolean isPrimePower(){
      boolean prime = true;
      int counter = 0, vCounter = 0;
      if(this.value > 0){
         for (int i = 2; i < value; i++){
            if((value / i) == 0){
               counter ++;
            }
         }
         int [] factors = new int[counter];
         for (int i = 2; i < value; i++){
            if((value / i) == 0){
               factors[vCounter] = ((int)value / i);
               vCounter++;
            }
         }
         for (int i = 0; i < factors.length-1; i++){
            if(factors[i] != factors[i+1]){
               prime = false;
            }
         }
      }
      else{
         return false;
      }
      return prime;
   }
   
}
